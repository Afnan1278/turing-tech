{"ast":null,"code":"var _jsxFileName = \"D:\\\\Workspace\\\\react\\\\test\\\\src\\\\components\\\\ConfirmationDialog.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { Icon } from '@mui/material';\n/**\r\n * call \r\n * window.ConfirmationDialog(\"\",callback) // return true/false\r\n * \r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ConfirmationDialog = props => {\n  _s();\n\n  const [open, setOpen] = useState(false);\n  const [message, setMessage] = useState('');\n  const [title, setTitle] = useState('');\n  const btnCancel = useRef(null);\n  const btnConfirm = useRef(null);\n\n  const handleClose = () => {\n    setOpen(false);\n  }; // open dialog\n\n\n  window.ConfirmationDialog = async (title, message) => {\n    setOpen(true);\n    setMessage(message);\n    setTitle(title); // wait for the dialog to open\n\n    await new Promise(resolve => setTimeout(resolve, 300)); // promise\n\n    return new Promise((resolve, reject) => {\n      if (btnCancel && btnCancel.current) {\n        btnCancel.current.addEventListener('click', () => {\n          setOpen(false);\n          return resolve(false);\n        });\n      }\n\n      if (btnConfirm && btnConfirm.current) {\n        btnConfirm.current.addEventListener('click', () => {\n          setOpen(false);\n          return resolve(true);\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      fullWidth: true,\n      onClose: handleClose,\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description\",\n      disableEscapeKeyDown: true,\n      className: \"modal-dialog\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-title\",\n        sx: {\n          paddingLeft: '46px'\n        },\n        children: [\" \", /*#__PURE__*/_jsxDEV(Icon, {\n          children: \"error_outline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 75\n        }, this), \" \", title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        dividers: true,\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          id: \"btn-confirmation-dialog-cancel\",\n          ref: btnCancel,\n          variant: \"contained\",\n          size: \"small\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          ref: btnConfirm,\n          variant: \"contained\",\n          color: \"secondary\",\n          autoFocus: true,\n          size: \"small\",\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 7\n  }, this);\n};\n\n_s(ConfirmationDialog, \"Yw5PIeHQpdilBH/juu5tDoYTQZs=\");\n\n_c = ConfirmationDialog;\nexport default ConfirmationDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConfirmationDialog\");","map":{"version":3,"names":["React","useState","useRef","Button","Dialog","DialogActions","DialogContent","DialogTitle","Icon","ConfirmationDialog","props","open","setOpen","message","setMessage","title","setTitle","btnCancel","btnConfirm","handleClose","window","Promise","resolve","setTimeout","reject","current","addEventListener","paddingLeft"],"sources":["D:/Workspace/react/test/src/components/ConfirmationDialog.tsx"],"sourcesContent":["import React,{useState,useRef} from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport { Icon } from '@mui/material';\r\n\r\n/**\r\n * call \r\n * window.ConfirmationDialog(\"\",callback) // return true/false\r\n * \r\n */\r\ndeclare global {\r\n    interface Window {\r\n        ConfirmationDialog:any\r\n    }\r\n}\r\n\r\nconst ConfirmationDialog = (props:any)=>{\r\n    const [open, setOpen] = useState(false);\r\n    const [message,setMessage] = useState('');\r\n    const [title,setTitle] = useState('');\r\n    const btnCancel:any = useRef(null);\r\n    const btnConfirm:any = useRef(null);\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n  \r\n    // open dialog\r\n    window.ConfirmationDialog = async(title:string,message:string)=>{\r\n        setOpen(true); \r\n        setMessage(message);\r\n        setTitle(title);\r\n        // wait for the dialog to open\r\n        await new Promise(resolve => setTimeout(resolve, 300));\r\n        // promise\r\n        return new Promise((resolve,reject)=>{\r\n          \r\n            if(btnCancel && btnCancel.current){\r\n                btnCancel.current.addEventListener('click',()=>{\r\n                    setOpen(false);\r\n                    return resolve(false);\r\n                });\r\n            }\r\n            if(btnConfirm && btnConfirm.current){\r\n                btnConfirm.current.addEventListener('click',()=>{\r\n                    setOpen(false);\r\n                    return resolve(true);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          open={open}\r\n          fullWidth={true}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n          disableEscapeKeyDown={true}\r\n          className=\"modal-dialog\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\" sx={{paddingLeft:'46px'}}> <Icon >error_outline</Icon> {title}</DialogTitle>\r\n          <DialogContent dividers>\r\n          {message}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button id=\"btn-confirmation-dialog-cancel\" ref={btnCancel} variant=\"contained\" size=\"small\">Cancel</Button>\r\n            <Button ref={btnConfirm} variant=\"contained\" color=\"secondary\" autoFocus size=\"small\">Confirm</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default ConfirmationDialog;"],"mappings":"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"},"metadata":{},"sourceType":"module"}