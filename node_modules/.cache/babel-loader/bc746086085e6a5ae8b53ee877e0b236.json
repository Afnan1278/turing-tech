{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport packageJson from \"../package.json\";\nimport moment from \"moment\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst buildDateGreaterThan = (latestDate, currentDate) => {\n  const momLatestDateTime = moment(latestDate);\n  const momCurrentDateTime = moment(currentDate);\n\n  if (momLatestDateTime.isAfter(momCurrentDateTime)) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nconst WithClearCache = () => {\n  _s();\n\n  const refreshCacheAndReload = () => {\n    if (caches) {\n      // Service worker cache should be cleared with caches.delete()\n      caches.keys().then(names => {\n        for (const name of names) {\n          caches.delete(name);\n        }\n      });\n    } // delete browser cache and hard reload\n\n\n    window.location.reload();\n  };\n\n  useEffect(() => {\n    fetch(\"/meta.json\").then(response => response.json()).then(meta => {\n      const latestVersionDate = meta.buildDate;\n      const currentVersionDate = packageJson.buildDate;\n      const shouldForceRefresh = buildDateGreaterThan(latestVersionDate, currentVersionDate);\n      console.log(meta.buildVersion);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(WithClearCache, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = WithClearCache;\nexport default WithClearCache;\n\nvar _c;\n\n$RefreshReg$(_c, \"WithClearCache\");","map":{"version":3,"names":["React","useEffect","packageJson","moment","buildDateGreaterThan","latestDate","currentDate","momLatestDateTime","momCurrentDateTime","isAfter","WithClearCache","refreshCacheAndReload","caches","keys","then","names","name","delete","window","location","reload","fetch","response","json","meta","latestVersionDate","buildDate","currentVersionDate","shouldForceRefresh","console","log","buildVersion"],"sources":["D:/Workspace/react/test/src/WithClearCache.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport packageJson from \"../package.json\";\r\nimport moment from \"moment\";\r\n\r\nconst buildDateGreaterThan = (latestDate:any, currentDate:any) => {\r\n  const momLatestDateTime = moment(latestDate);\r\n  const momCurrentDateTime = moment(currentDate);\r\n\r\n  if (momLatestDateTime.isAfter(momCurrentDateTime)) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nconst WithClearCache =()=> {\r\n\r\n\r\n  const refreshCacheAndReload = () => {\r\n    \r\n    if (caches) {\r\n      \r\n      // Service worker cache should be cleared with caches.delete()\r\n      caches.keys().then((names) => {\r\n        for (const name of names) {\r\n          caches.delete(name);\r\n          \r\n        }\r\n      });\r\n    }\r\n    // delete browser cache and hard reload\r\n    window.location.reload();\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch(\"/meta.json\")\r\n      .then((response) => response.json())\r\n      .then((meta) => {\r\n        const latestVersionDate = meta.buildDate;\r\n        const currentVersionDate = packageJson.buildDate;\r\n\r\n        const shouldForceRefresh = buildDateGreaterThan(\r\n          latestVersionDate,\r\n          currentVersionDate\r\n        );\r\n        console.log(meta.buildVersion)\r\n       \r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <></>\r\n  );\r\n}\r\n\r\nexport default WithClearCache;"],"mappings":";;AAAA,OAAOA,KAAP,IAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;;;AAEA,MAAMC,oBAAoB,GAAG,CAACC,UAAD,EAAiBC,WAAjB,KAAqC;EAChE,MAAMC,iBAAiB,GAAGJ,MAAM,CAACE,UAAD,CAAhC;EACA,MAAMG,kBAAkB,GAAGL,MAAM,CAACG,WAAD,CAAjC;;EAEA,IAAIC,iBAAiB,CAACE,OAAlB,CAA0BD,kBAA1B,CAAJ,EAAmD;IACjD,OAAO,IAAP;EACD,CAFD,MAEO;IACL,OAAO,KAAP;EACD;AACF,CATD;;AAWA,MAAME,cAAc,GAAE,MAAK;EAAA;;EAGzB,MAAMC,qBAAqB,GAAG,MAAM;IAElC,IAAIC,MAAJ,EAAY;MAEV;MACAA,MAAM,CAACC,IAAP,GAAcC,IAAd,CAAoBC,KAAD,IAAW;QAC5B,KAAK,MAAMC,IAAX,IAAmBD,KAAnB,EAA0B;UACxBH,MAAM,CAACK,MAAP,CAAcD,IAAd;QAED;MACF,CALD;IAMD,CAXiC,CAYlC;;;IACAE,MAAM,CAACC,QAAP,CAAgBC,MAAhB;EACD,CAdD;;EAgBAnB,SAAS,CAAC,MAAM;IACdoB,KAAK,CAAC,YAAD,CAAL,CACGP,IADH,CACSQ,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGT,IAFH,CAESU,IAAD,IAAU;MACd,MAAMC,iBAAiB,GAAGD,IAAI,CAACE,SAA/B;MACA,MAAMC,kBAAkB,GAAGzB,WAAW,CAACwB,SAAvC;MAEA,MAAME,kBAAkB,GAAGxB,oBAAoB,CAC7CqB,iBAD6C,EAE7CE,kBAF6C,CAA/C;MAIAE,OAAO,CAACC,GAAR,CAAYN,IAAI,CAACO,YAAjB;IAED,CAZH;EAaD,CAdQ,EAcN,EAdM,CAAT;EAgBA,oBACE,qCADF;AAGD,CAtCD;;GAAMrB,c;;KAAAA,c;AAwCN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}