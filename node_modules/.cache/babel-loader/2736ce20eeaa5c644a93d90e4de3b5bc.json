{"ast":null,"code":"var _jsxFileName = \"D:\\\\Workspace\\\\react\\\\test\\\\src\\\\components\\\\AlertMessage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Alert, AlertTitle, Paper } from '@mui/material/';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport let ALERT_TYPE;\n\n(function (ALERT_TYPE) {\n  ALERT_TYPE[\"ERROR\"] = \"error\";\n  ALERT_TYPE[\"WARNING\"] = \"warning\";\n  ALERT_TYPE[\"INFO\"] = \"info\";\n  ALERT_TYPE[\"SUCCESS\"] = \"success\";\n})(ALERT_TYPE || (ALERT_TYPE = {}));\n\nconst AlertMessage = _ref => {\n  _s();\n\n  let {\n    type,\n    message\n  } = _ref;\n  //const {message} = props;\n  const [state, setState] = useState(null);\n  useEffect(() => {\n    if (message) setState({\n      type: type,\n      message: message\n    });\n  }, [message]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: state && state.message ? /*#__PURE__*/_jsxDEV(Paper, {\n      className: \"mb-10\",\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: state.type,\n        children: [/*#__PURE__*/_jsxDEV(AlertTitle, {\n          style: {\n            textTransform: 'capitalize'\n          },\n          children: state.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), state.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this) : ''\n  }, void 0, false);\n};\n\n_s(AlertMessage, \"DIVSlqWCiq5AR4YVMsojlCXc5vc=\");\n\n_c = AlertMessage;\nexport default AlertMessage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlertMessage\");","map":{"version":3,"names":["React","useState","useEffect","Alert","AlertTitle","Paper","ALERT_TYPE","AlertMessage","type","message","state","setState","textTransform"],"sources":["D:/Workspace/react/test/src/components/AlertMessage.tsx"],"sourcesContent":["import React,{useState,useEffect,memo} from 'react';\r\nimport {Alert,AlertTitle,Paper} from '@mui/material/';\r\n\r\nexport enum ALERT_TYPE {\r\n    ERROR = 'error',\r\n    WARNING = 'warning',\r\n    INFO = 'info',\r\n    SUCCESS = 'success'\r\n}\r\n\r\nconst AlertMessage:React.FC<any> = ({type,message})=>{\r\n    //const {message} = props;\r\n    const [state,setState] = useState<any|null>(null);\r\n    \r\n    useEffect(() => {\r\n        if(message)\r\n            setState({type:type,message:message});\r\n    }, [message])\r\n\r\n    return (\r\n        <>\r\n        {state && state.message?\r\n            <Paper className='mb-10'>\r\n                <Alert severity={state.type}>\r\n                    <AlertTitle style={{textTransform:'capitalize'}}>{state.type}</AlertTitle>\r\n                    {state.message}\r\n                </Alert>\r\n            </Paper>\r\n        :''}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AlertMessage;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAA4C,OAA5C;AACA,SAAQC,KAAR,EAAcC,UAAd,EAAyBC,KAAzB,QAAqC,gBAArC;;;AAEA,WAAYC,UAAZ;;WAAYA,U;EAAAA,U;EAAAA,U;EAAAA,U;EAAAA,U;GAAAA,U,KAAAA,U;;AAOZ,MAAMC,YAA0B,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAACC,IAAD;IAAMC;EAAN,CAAiB;EACjD;EACA,MAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBV,QAAQ,CAAW,IAAX,CAAjC;EAEAC,SAAS,CAAC,MAAM;IACZ,IAAGO,OAAH,EACIE,QAAQ,CAAC;MAACH,IAAI,EAACA,IAAN;MAAWC,OAAO,EAACA;IAAnB,CAAD,CAAR;EACP,CAHQ,EAGN,CAACA,OAAD,CAHM,CAAT;EAKA,oBACI;IAAA,UACCC,KAAK,IAAIA,KAAK,CAACD,OAAf,gBACG,QAAC,KAAD;MAAO,SAAS,EAAC,OAAjB;MAAA,uBACI,QAAC,KAAD;QAAO,QAAQ,EAAEC,KAAK,CAACF,IAAvB;QAAA,wBACI,QAAC,UAAD;UAAY,KAAK,EAAE;YAACI,aAAa,EAAC;UAAf,CAAnB;UAAA,UAAkDF,KAAK,CAACF;QAAxD;UAAA;UAAA;UAAA;QAAA,QADJ,EAEKE,KAAK,CAACD,OAFX;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADH,GAOA;EARD,iBADJ;AAYH,CArBD;;GAAMF,Y;;KAAAA,Y;AAuBN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}